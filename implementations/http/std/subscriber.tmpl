import (
	"context"
	"github.com/bdragon300/go-asyncapi/run"
	runHttp "github.com/bdragon300/go-asyncapi/run/http"
)

type Subscriber struct {
	channelBindings *runHttp.ChannelBindings
	operationBindings *runHttp.OperationBindings
	callbacks *run.Ring[subscriberFunc]
}

func (s *Subscriber) Receive(ctx context.Context, cb func(envelope runHttp.EnvelopeReader)) error {
	element := s.callbacks.Append(cb)
	defer func() {
		s.callbacks.Remove(element)
	}()

	<-ctx.Done()
	return ctx.Err()
}

func (s *Subscriber) Close() error {
	return nil
}
