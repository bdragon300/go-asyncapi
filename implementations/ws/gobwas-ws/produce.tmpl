import (
	"context"
	"fmt"
	"net/url"

	runWs "github.com/bdragon300/go-asyncapi/run/ws"
	"github.com/gobwas/ws"
)

func NewProducer(serverURL *url.URL, bindings *runWs.ServerBindings) *ProduceClient {
	return &ProduceClient{
		bindings:  bindings,
		serverURL: serverURL,
	}
}

type ProduceClient struct {
	bindings  *runWs.ServerBindings
	serverURL *url.URL
}

func (p ProduceClient) Publisher(ctx context.Context, address string, chb *runWs.ChannelBindings, opb *runWs.OperationBindings) (runWs.Publisher, error) {
	if chb != nil && chb.Method != "" && chb.Method != "GET" {
		return nil, fmt.Errorf("unsupported method %s", chb.Method)
	}
	u := p.serverURL.JoinPath(address)
	netConn, _, _, err := ws.Dial(ctx, u.String())
	if err != nil {
		return nil, err
	}

	return NewChannel(chb, opb, netConn, true), nil
}
