import (
	"context"
	"fmt"

	runRedis "github.com/bdragon300/go-asyncapi/run/redis"
	"github.com/redis/go-redis/v9"
)

type PublishChannel struct {
	Client *redis.Client
	Name   string
}

type ImplementationRecord interface {
	AsAny() any
}

func (p PublishChannel) Send(ctx context.Context, envelopes ...runRedis.EnvelopeWriter) error {
	for i, envelope := range envelopes {
		ir := envelope.(ImplementationRecord)
		if err := p.Client.Publish(ctx, p.Name, ir.AsAny()).Err(); err != nil {
			return fmt.Errorf("envelope #%d: %w", i, err)
		}
	}
	return nil
}

func (p PublishChannel) Close() error {
	// Do nothing
	return nil
}
