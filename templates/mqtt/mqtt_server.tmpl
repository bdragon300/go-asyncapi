{{- localobj .Type}}
func New{{.Type | goid}}(producer {{qualrun .ProtoName "Producer"}}, consumer {{qualrun .ProtoName "Consumer"}}) *{{.Type| gousage}} {
    return &{{.Type| gousage}}{
        producer: producer,
        consumer: consumer,
    }
}

{{.Type| godef}}

func (s {{.Type| gousage}}) Name() string {
    return "{{ . | goid }}"
}

func (s {{.Type| gousage}}) Producer() {{qualrun .ProtoName "Producer"}} {
    return s.producer
}

func (s {{.Type| gousage}}) Consumer() {{qualrun .ProtoName "Consumer"}} {
    return s.consumer
}

{{- range .GetRelevantProtoChannels .ProtoName}}
func (s {{$.Type| gousage}}) Open{{ .Type | goid }}(
    ctx {{qual "context.Context"}},
    {{- if .ParametersType}}params {{.ParametersType| gousage}},{{end}}
) (ch *{{.Type| gousage}}, err error) {
    return {{qualgenpkg .Type}}Open{{ .Type | goid }}(
        ctx,
        {{- if .ParametersType}}params,{{end}}
        {{- if .IsPublisher}}s.producer,{{end}}
        {{- if .IsSubscriber}}s.consumer,{{end}}
    )
}
{{- end}}