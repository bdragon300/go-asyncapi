{{if .ParametersType}}
    {{.ParametersType.D}}
{{end}}

{{ if .BindingsType}}
    {{ .BindingsType.D }}
    {{range $proto := .BindingsProtocols}}
        {{$bindingsValue := .ProtoBindingsValue $proto}}
        func (c *{{ .BindingStruct.U }}) {{ $proto | capitalize }}() {{$bindingsValue.Type.U}} {
            b := {{$bindingsValue.U}}
            {{if .BindingsChannelPromise}}
                {{$jvals := .BindingsChannelPromise.T.JSONValues.GetOrEmpty $proto}}
                {{range $jval := $jvals.Entries}}
                    {{$jval.Key | toCamelCase }} := {{$jval.Value | golit}}
                    _ = {{qual "encoding/json.Unmarshal"}}([]byte({{$jval.Key | toCamelCase }}), &b.{{$jval.Key}})
                {{end}}
            {{end}}
            {{if .BindingsPublishPromise}}
                {{$jvals := .BindingsPublishPromise.T.JSONValues.GetOrEmpty $proto}}
                {{range $jval := $jvals.Entries}}
                    {{$jval.Key | toCamelCase }}Pub := {{$jval.Value | golit}}
                    _ = {{qual "encoding/json.Unmarshal"}}([]byte({{$jval.Key | toCamelCase }}Pub), &b.PublisherBindings.{{$jval.Key}})
                {{end}}
            {{end}}
            {{if .BindingsSubscribePromise}}
                {{$jvals := .BindingsSubscribePromise.T.JSONValues.GetOrEmpty $proto}}
                {{range $jval := $jvals.Entries}}
                    {{$jval.Key | toCamelCase }}Sub := {{$jval.Value | golit}}
                    _ = {{qual "encoding/json.Unmarshal"}}([]byte({{$jval.Key | toCamelCase }}Sub), &b.SubscriberBindings.{{$jval.Key}})
                {{end}}
            {{end}}
            return b
        }
    {{end}}
{{end}}

func {{..RenderContext}}Name({{if .ParametersType}}params {{.ParametersType.U}}{{end}}) {{qualr "" "ParamString"}} {
    {{if .ParametersType}}
        paramMap := map[string]string{
        {{range $f := .ParametersType.Fields}}params.{{$f.Name}}.Name(): params.{{$f.Name}}.String(),
        {{end}}
        }
        return {{qualr "" "ParamString"}}{
            Expr: "{{.SpecKey | golit}}",
            Parameters: paramMap,
        }
    {{else}}
        return {{qualr "" "ParamString"}}{
            Expr: "{{.SpecKey | golit}}",
        }
    {{end}}
}
