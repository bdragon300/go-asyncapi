type {{(print .Type.Name "Server") | toCamelCase}} interface {
    Open{{.Type.Name}}(ctx {{qual "context.Context"}}, {{if .ParametersType}}params {{.ParametersType.U}}{{end}}) (*{{.Struct.U}}, error)
    {{if .IsPublisher}}Producer() {{qualrun .ProtoName "Producer"}}{{end}}
    {{if .IsSubscriber}}Consumer() {{qualrun .ProtoName "Consumer"}}{{end}}
}

{{template "proto/channel/bareNewFunction" .}}

{{template "proto/channel/openFunction" .}}

{{.Struct.D}}

{{template "proto/channel/commonMethods" .}}

{{if .IsPublisher}}{{template "proto/channel/barePublishMethods" .}}{{end}}

{{if .IsSubscriber}}{{template "proto/channel/subscribeMethods" .}}{{end}}