{{- /* dot == lang.GoValue */}}

{{define "code/lang/govalue/usage"}}
    {{- if .Type }}
        {{- if .Type.IsPointer }}
            {{- if .Empty }}
                {{- if .EmptyCurlyBrackets }}
                    {{- /* &{} -> ToPtr({}) */}}{{ goQualR "ToPtr"}}({})
                {{- else }}
                    {{- /* &nil -> nil */}}nil
                {{- end }}
            {{- else if .LiteralValue }}
                {{- with innerType .Type }}
                    {{- /* &int(123) -> ToPtr(int(123)) */}}
                    {{- goQualR "ToPtr"}}({{ . | goUsage }}({{template "code/lang/gotypealias/value_expr" .}}))
                {{- else }}
                    {{- /* &123 -> ToPtr(123) */}}
                    {{- goQualR "ToPtr"}}({{template "code/lang/gotypealias/value_expr" .}})
                {{- end }}
            {{- else }}
                {{- /* &AnyType{}; &map[string]int{}; &[]int{} */}}&{{- .Type | goUsage }}
                {{- if .LiteralValue }}
                    {{- /* int(123) */}}({{template "code/lang/gotypealias/value_expr" .}})
                {{- else }}
                    {{- template "code/lang/gotypealias/value_expr" . }}
                {{- end }}
            {{- end }}
        {{- else }}
            {{- .Type | goUsage }}
            {{- if .LiteralValue }}
                {{- /* int(123) */}}({{template "code/lang/gotypealias/value_expr" .}})
            {{- else }}
                {{- template "code/lang/gotypealias/value_expr" . }}
            {{- end }}
        {{- end }}
    {{- else }}
        {{- template "code/lang/gotypealias/value_expr" .}}
    {{- end }}
{{- end}}

{{define "code/lang/gotypealias/value_expr"}}
    {{- if .LiteralValue }}
        {{- /* Literal */}}{{  .LiteralValue | goLit }}
    {{- else if .MapValues.Len }}
        {{- /* Map */}}{
        {{- range .MapValues.Entries }}
            {{.Key | goLit }}: {{ .Value | goLit }},
        {{- end }}
        }
    {{- else if .StructValues.Len }}
        {{- /* Struct */}}{
        {{- range .StructValues.Entries }}
            {{.Key | goID }}: {{ .Value | goLit }},
        {{- end }}
        }
    {{- else if .ArrayValues }}
        {{- /* Array/slice */}}{
        {{- range .ArrayValues }}
            {{ . | goLit }},
        {{- end }}
        }
    {{- else }}
        {{- /* Empty value */}}
        {{- if .EmptyCurlyBrackets}}{}{{else}}nil{{end}}
    {{- end }}
{{- end}}