{{- /* dot == render.ProtoChannel */}}
{{define "code/proto/kafka/channel/newFunction/block1"}}
    res.topic = res.address.String()
    {{- if .BindingsType}}
        bindings := {{.BindingsType | goUsage}}{}.{{.Protocol | goIDUpper}}()
        if bindings.Topic != "" {
            res.topic = bindings.Topic
        }
    {{- end}}
{{- end}}
{{define "code/proto/kafka/channel/publishMethods/block1"}}
    envelope.SetTopic(c.Topic())
{{- end}}

{{- def .Type}}
{{template "code/proto/channel/newFunction" .}}

{{template "code/proto/channel/openFunction" .}}

{{- if ndefined .Type}}
{{.Type | goDef}}

{{template "code/proto/channel/commonMethods" .}}

func (c {{.Type| goUsage}}) Topic() string {
    return c.topic
}

{{if .IsPublisher}}{{template "code/proto/channel/publishMethods" .}}{{end}}

{{if .IsSubscriber}}{{template "code/proto/channel/subscribeMethods" .}}{{end}}

{{template "code/proto/channel/serverInterface" .}}
{{- end}}
