{{- /* dot == render.ProtoChannel */}}
{{define "code/proto/mqtt/channel/newFunction/block1"}}
    res.topic = res.address.String()
{{- end}}
{{define "code/proto/mqtt/channel/publishMethods/block1"}}
    envelope.SetTopic(c.Topic())
{{- end}}

{{- with once .Type}}
    {{template "code/proto/channel/newFunction" $}}
    {{template "code/proto/channel/openFunction" $}}
    {{ . | goDef }}

    {{template "code/proto/channel/commonMethods" $}}

    func (c {{. | goUsage}}) Topic() string {
        return c.topic
    }

    {{if $.IsPublisher}}{{template "code/proto/channel/publishMethods" $}}{{end}}
    {{if $.IsSubscriber}}{{template "code/proto/channel/subscribeMethods" $}}{{end}}
    {{template "code/proto/channel/serverInterface" $}}
{{- end}}
