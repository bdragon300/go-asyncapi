{{- /* dot == render.Server */}}

{{define "code/proto/nats/server/impl/github.com/nats-io/nats.go/connectFunction"}}
func Connect{{ . | goIDUpper }}Bidi(_ {{goQual "context.Context"}}, url *{{goQual "net/url.URL"}}, opts ...{{goQual "github.com/nats-io/nats.go.Option"}}) (*{{ . | goIDUpper }}Closable, error) {
    client, err := {{with impl .Protocol}}{{goPkg .}}{{end}}NewClient(url.String(), opts...)
    if err != nil {
        return nil, err
    }
    producer, consumer := client, client
    return &{{ . | goIDUpper }}Closable{
        {{. | goIDUpper}}{producer: producer, consumer: consumer},
    }, nil
}
{{- end}}

{{define "code/proto/nats/server/impl/github.com/nats-io/nats.go/connectProducerFunction"}}
func Connect{{ . | goIDUpper }}Producer(_ {{goQual "context.Context"}}, url *{{goQual "net/url.URL"}}, opts ...{{goQual "github.com/nats-io/nats.go.Option"}}) (*{{ . | goIDUpper }}Closable, error) {
    producer, err := {{with impl .Protocol}}{{goPkg .}}{{end}}NewClient(url.String(), opts...)
    if err != nil {
        return nil, err
    }
    return &{{ . | goIDUpper }}Closable{
        {{. | goIDUpper}}{producer: producer},
    }, nil
}
{{- end}}

{{define "code/proto/nats/server/impl/github.com/nats-io/nats.go/connectConsumerFunction"}}
func Connect{{ . | goIDUpper }}Consumer(_ {{goQual "context.Context"}}, url *{{goQual "net/url.URL"}}, opts ...{{goQual "github.com/nats-io/nats.go.Option"}}) (*{{ . | goIDUpper }}Closable, error) {
    consumer, err := {{with impl .Protocol}}{{goPkg .}}{{end}}NewClient(url.String(), opts...)
    if err != nil {
        return nil, err
    }
    return &{{ . | goIDUpper }}Closable{
        {{. | goIDUpper}}{consumer: consumer},
    }, nil
}
{{- end}}