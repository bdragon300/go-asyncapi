{{- /* dot == render.ProtoMessage */}}

{{define "message/proto/encoder/default"}}
    {{- if .EffectiveContentType | hasSuffix "yaml"}}
        {{template "message/proto/encoder/application/yaml" .}}
    {{- else}}
        // Default encoder
        enc := {{goQual "encoding/json.NewEncoder"}}(envelope)
        if err := enc.Encode(m.Payload); err != nil {
            return err
        }
    {{- end}}
{{- end}}

{{define "message/proto/decoder/default"}}
    {{- if .EffectiveContentType | hasSuffix "yaml"}}
        {{template "message/proto/decoder/application/yaml" .}}
    {{- else}}
        // Default decoder
        dec := {{goQual "encoding/json.NewDecoder"}}(envelope)
        if err := dec.Decode(&m.payload); err != nil {
            return err
        }
    {{- end}}
{{- end}}
{{/*TODO: add xml, avro, etc.*/}}
{{define "message/proto/encoder/application/yaml"}}
    enc := {{goQual "gopkg.in/yaml.v3.NewEncoder"}}(envelope)
    if err := enc.Encode(m.Payload); err != nil {
        return err
    }
{{- end}}

{{define "message/proto/decoder/application/yaml"}}
    dec := {{goQual "gopkg.in/yaml.v3.NewDecoder"}}(envelope)
    if err := dec.Decode(&m.payload); err != nil {
        return err
    }
{{- end}}
