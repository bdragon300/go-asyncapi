{{- /*
    .ChannelOrOperation == render.Channel or render.Operation;
    .Server == render.Server
    .Kind == "channel" or "operation"
    */}}
{{define "client/channeloperation/mqtt/github.com/eclipse/paho.mqtt.golang/producer/connect"}}
server, err := {{goPkg .Server}}Connect{{.Server | goIDUpper}}Producer(ctx, serverURL, nil)
if err != nil {
    return {{goQual "fmt.Errorf"}}("connect server %s: %w", serverURL, err)
}
defer server.Close()
{{- end}}

{{define "client/channeloperation/mqtt/github.com/eclipse/paho.mqtt.golang/consumer/connect"}}
server, err := {{goPkg .Server}}Connect{{.Server | goIDUpper}}Consumer(ctx, serverURL, nil)
if err != nil {
    return {{goQual "fmt.Errorf"}}("connect server %s: %w", serverURL, err)
}
defer server.Close()
{{- end}}

{{define "client/channel/mqtt/publish/prepareEnvelope"}}
    envelope.SetTopic(object.Topic())
{{- end}}

{{define "client/operation/mqtt/publish/prepareEnvelope"}}
    envelope.SetTopic(object.Channel.Topic())
{{- end}}