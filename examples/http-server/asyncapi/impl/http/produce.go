// Code generated by go-asyncapi tool. DO NOT EDIT.

package http

import (
	"context"
	"net/url"

	runHttp "github.com/bdragon300/go-asyncapi/run/http"
)

func NewProducer(serverURL *url.URL, bindings *runHttp.ServerBindings) *ProduceClient {
	return &ProduceClient{
		bindings:  bindings,
		serverURL: serverURL,
	}
}

type ProduceClient struct {
	bindings  *runHttp.ServerBindings
	serverURL *url.URL
}

func (p ProduceClient) Publisher(_ context.Context, address string, chb *runHttp.ChannelBindings, opb *runHttp.OperationBindings) (runHttp.Publisher, error) {
	u := p.serverURL
	// Append the address to the server URL path
	if u.Path == "" {
		// url.JoinPath requires a leading slash in empty path to give the correct result
		// otherwise it will return the path as is, e.g. for "foo" it sets path to "foo" instead of "/foo"
		u.Path = "/"
	}
	if address != "" {
		u = u.JoinPath(address)
	}
	return NewPublisher(chb, opb, u), nil
}
